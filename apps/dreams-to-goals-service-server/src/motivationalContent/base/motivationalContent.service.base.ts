/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MotivationalContent as PrismaMotivationalContent,
} from "@prisma/client";

export class MotivationalContentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MotivationalContentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.motivationalContent.count(args);
  }

  async motivationalContents(
    args: Prisma.MotivationalContentFindManyArgs
  ): Promise<PrismaMotivationalContent[]> {
    return this.prisma.motivationalContent.findMany(args);
  }
  async motivationalContent(
    args: Prisma.MotivationalContentFindUniqueArgs
  ): Promise<PrismaMotivationalContent | null> {
    return this.prisma.motivationalContent.findUnique(args);
  }
  async createMotivationalContent(
    args: Prisma.MotivationalContentCreateArgs
  ): Promise<PrismaMotivationalContent> {
    return this.prisma.motivationalContent.create(args);
  }
  async updateMotivationalContent(
    args: Prisma.MotivationalContentUpdateArgs
  ): Promise<PrismaMotivationalContent> {
    return this.prisma.motivationalContent.update(args);
  }
  async deleteMotivationalContent(
    args: Prisma.MotivationalContentDeleteArgs
  ): Promise<PrismaMotivationalContent> {
    return this.prisma.motivationalContent.delete(args);
  }
}
